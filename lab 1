import string

def caesar_decrypt(ciphertext, shift):
    alphabet = string.ascii_uppercase  # Uppercase alphabet
    decrypted_text = ""
    
    for char in ciphertext:
        if char.upper() in alphabet:
            new_index = (alphabet.index(char.upper()) - shift) % 26
            decrypted_char = alphabet[new_index]
            decrypted_text += decrypted_char.lower() if char.islower() else decrypted_char
        else:
            decrypted_text += char  # Keep spaces and punctuation unchanged
    
    return decrypted_text

def detect_caesar_shift(ciphertext):
    for shift in range(1, 26):  # Try all 25 possible shifts
        decrypted = caesar_decrypt(ciphertext, shift)
        if "the " in decrypted.lower():  # Simple heuristic check for common word
            return shift, decrypted
    return None, "No valid shift found"

# Given Ciphertext:
ciphertext = "Hvs Eiwqy Pfckb Tcl Xiadg Cjsf Hvs Zonm Rcu."

# Detect correct shift and print result
shift, plaintext = detect_caesar_shift(ciphertext)
if shift:
    print(f"Detected Shift: {shift}\nDecrypted Text: {plaintext}")
else:
    print("No valid decryption found.")
